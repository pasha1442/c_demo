# Generated by Django 4.2.14 on 2025-04-09 12:03

import basics.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0013_alter_companysetting_key'),
        ('data_processing', '0017_dataingestion_chunking_status_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='dataingestion',
            name='embedding_generated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dataingestion',
            name='generate_embedding',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='dataingestion',
            name='is_valid_embedding',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='dataingestion',
            name='status',
            field=models.CharField(choices=[('initiated', 'Initiated'), ('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('error', 'Error'), ('data_ingested', 'Ingested'), ('embedding_generated', 'Embedding Generated')], default='pending', max_length=20),
        ),
        migrations.CreateModel(
            name='DataEmbedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('batch_size', models.PositiveIntegerField(default=50, help_text='Number of nodes to process in a batch')),
                ('max_label_workers', models.PositiveIntegerField(default=3, help_text='Maximum number of labels to process in parallel')),
                ('max_batch_workers', models.PositiveIntegerField(default=3, help_text='Maximum number of batches to process in parallel per label')),
                ('labels', models.JSONField(blank=True, default=list, help_text='List of node labels to process', null=True)),
                ('selected_properties', models.JSONField(blank=True, default=dict, help_text='Dictionary mapping labels to their selected properties with embedding field names', null=True)),
                ('embedding_groups', models.JSONField(blank=True, default=dict, help_text='Configuration of embedding groups per label', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('error', 'Error')], default='pending', max_length=20)),
                ('completion_percentage', models.PositiveIntegerField(default=0)),
                ('nodes_processed', models.PositiveIntegerField(default=0)),
                ('embeddings_generated', models.PositiveIntegerField(default=0)),
                ('total_processing_time', models.FloatField(default=0, help_text='Total processing time in seconds')),
                ('status_metadata', models.JSONField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True)),
                ('execution_start_at', models.DateTimeField(blank=True, null=True)),
                ('execution_end_at', models.DateTimeField(blank=True, null=True)),
                ('is_valid_embedding', models.BooleanField(default=False)),
                ('session_id', models.CharField(blank=True, default=basics.utils.UUID.get_uuid, editable=False, help_text='Unique session identifier for this embedding request', max_length=36, null=True, unique=True)),
                ('company', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='company.company')),
            ],
            options={
                'verbose_name': 'Data Embedding',
                'verbose_name_plural': 'Data Embeddings',
                'db_table': 'data_processing_data_embedding',
                'ordering': ['-created_at'],
            },
        ),
    ]
