# Generated by Django 4.2.14 on 2025-03-18 12:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0013_alter_companysetting_key'),
        ('data_processing', '0012_alter_dataenrichment_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataIngestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='ingestion_files/')),
                ('execution_type', models.CharField(choices=[('workflow', 'Workflow'), ('prompt', 'Prompt')], default='prompt', max_length=10)),
                ('workflow', models.CharField(blank=True, help_text='API Controller to use if execution type is workflow', max_length=100, null=True)),
                ('prompt_name', models.CharField(blank=True, help_text='Langfuse prompt name to use if execution type is prompt', max_length=100, null=True)),
                ('schema_type', models.CharField(choices=[('defined', 'Prompt with schema'), ('create', 'Prompt to generate schema')], default='defined', max_length=10)),
                ('prompt_defined_schema', models.CharField(blank=True, help_text='Prompt with the defined schema', max_length=100, null=True)),
                ('prompt_create_schema', models.CharField(blank=True, help_text='Prompt used to create schema using LLM', max_length=100, null=True)),
                ('chunk_size', models.PositiveIntegerField(help_text='Number of objects/rows/tokens depending on file type')),
                ('chunk_overlap', models.PositiveIntegerField(blank=True, default=0, help_text='Overlap between chunks (for text files)', null=True)),
                ('destination', models.CharField(choices=[('neo4j', 'Neo4j'), ('pinecone', 'Pinecone')], default='neo4j', max_length=25)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('error', 'Error')], default='pending', max_length=20)),
                ('completion_percentage', models.PositiveIntegerField(default=0)),
                ('status_metadata', models.JSONField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True)),
                ('execution_start_at', models.DateTimeField(blank=True, null=True)),
                ('execution_end_at', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='company.company')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
